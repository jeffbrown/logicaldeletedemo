buildscript {
    repositories {
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "se.transmode.gradle:gradle-docker:1.2"
    }
}

version "0.2"
group "grailssamples"

apply plugin: 'docker'

task copyClientResources(dependsOn: ':client:build') {
    group = 'build'
    description = 'Copy client resources into server'
    doLast {
        copy {
            from project(':client').buildDir.absolutePath
            into "${project(':server').buildDir}/resources/main/public"
        }
    }
}
task assembleServerAndClient(dependsOn: ['copyClientResources', ':server:assemble']) {
    group = 'build'
    description = 'Build combined server & client JAR'

    doLast {
        copy {
            from fileTree(dir: "${project(':server').buildDir}/libs/")
            into "$rootDir/build/"
        }

        logger.quiet "JAR generated at $rootDir/build/. It combines the server and client projects."
    }
}
task(":server:assemble").mustRunAfter(copyClientResources)

task clean {
    delete "${rootDir}/build/"
}

task buildDocker(type: Docker) {
    baseImage = 'williamyeh/java8'
    push = false
    push = project.hasProperty('pushDocker')
    addFile 'build/server-0.2.jar', '/logicaldeletedemo.jar'
    entryPoint(['java', '-Djava.security.egd=file:/dev/./urandom', '-jar', '/logicaldeletedemo.jar'])
    exposePort(8080)
}

buildDocker.dependsOn assembleServerAndClient
